button {background-color: inherit;}

.button-no-outline {
    cursor: pointer;
    display: flex;
    background-color: transparent;
    padding: .375rem .75rem;
    border-radius: 1rem;
}

.button-no-outline:hover, .button-no-outline:active {
    background-color: transparent;
    /* box-shadow:  0 0 3px #65A3FF; */
    opacity: 0.5;
}

.button-outline {
    display: flex;
    background-color: transparent;
    padding: .375rem .75rem;
    border: solid 1px #65A3FF;
    border-radius: 1rem;
}

.button-outline:hover, .button-outline:active {
    background-color: transparent;
    box-shadow:  0 0 3px #65A3FF;
    opacity: 0.5;
}

.back-button-styles {
    height: 1.8rem;
    width: 1.8rem;
}

.button-styles {
    margin: auto;
    height: 1.8rem;
}

.svg-default-size {
    height: 1.8rem;
    width: 1.8rem;
}

//DropdownBtn
.menu-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .menu-container div span {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .menu-trigger {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 4px 0px;
    border: none;
    vertical-align: middle;
    border-radius: 1rem;
  }
  
  .menu-trigger:hover {
    border-color: #65A3FF;
    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);
  }
  
  .menu-trigger span {
    font-weight: 200;
    vertical-align: middle;
    margin: 0 5px;
  }
  
  .menu-trigger img {
    border-radius: 90px;
  }
  
  .menu {
    background: #ffffff;
    border: 1px solid black !important;
    border-radius: 1rem;
    position: absolute;
    top: 40px;
    left: 0;
    width: max-content;
    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-20px);
    transition: opacity 0.4s ease, transform 0.4s ease, visibility 0.4s;
  }
  
  .menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    z-index: 1024;
  }
  
  .menu ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .menu li, .menu div {
    border-bottom: 1px solid black;
  }

  .menu li:first-child, .menu div:first-child { border-radius: 1rem 1rem 0 0; }
  .menu li:last-child, .menu div:last-child { border-bottom: none; border-radius: 0 0 1rem 1rem; }
  .menu li:only-child, .menu div:only-child { border-bottom: none; border-radius: 1rem !important; }
  
  .menu li div {
    text-decoration: none;
    color: #333333;
    padding: 15px 20px;
    display: block;
  }

  .menu li div:hover {
        color: white !important;
        background-color: #65A3FF !important;
    }

  .menu li div:active {
     color: white !important;
     background-color: #65A3FF !important;
     box-shadow: inset 4px -4px 4px rgba(0, 0, 0, 0.25);
  }
//listMap
.listMap {
    padding: 0.66rem 0.66rem;
    border-bottom: 1px solid;
    /* border-left: 1px solid;
    border-right: 1px solid; */
}
.listMap:first-child {
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    border-top: 1px solid;
}
.listMap:last-child {
    border-bottom: 0px solid;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
}

.listMap p {
    text-align: left;
    display: inline-block;
    vertical-align: middle;
    line-height: normal;
}
//TextListItem
.fieldList a:first-child {
  border-top-left-radius: 1rem;
  border-bottom-left-radius: 1rem;
  border-right: 0;
}
.fieldList a:last-child {
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
}
.fieldList a {
  padding: .3rem;
  color: inherit !important;
  border: 1px solid #65A3FF;
  font-size:.9em;
  font-weight: 700;
  justify-content: center;
  align-items: center;
}

//Text Info
.text-info {
  border: none;
  color: #00ba0c;
  font-size: .5rem;
}
.text-info:hover {
  opacity: .5;
}
//Info
.info {
  color: #00ba0c;
  border-color: #00ba0c;
}
.info:hover {
/*     border: none !important; */
  color: white !important;
  background-color: #00ba0c !important;
}
.info:active {
/*     border: none !important; */
  color: white !important;
  background-color: #00ba0c !important;
}

//Refresh in button
.info svg {
  fill: #65A3FF !important;
}
.info:hover svg {
  fill: white !important;
}

//Warning
.warning {
  border-color: #ffc107;
  color: #ffc107;
}
.warning:hover {
/*     border: none !important; */
  color: white !important;
  background-color: #ffc107 !important;
}
.warning:active {
/*     border: none !important; */
  color: white !important;
  background-color: #ffc107 !important;
}
//Alert
.alert {
  border-color: #ffc107;
  color: #ffc107;
}
.alert:hover {
/*     border: none !important; */
  color: white !important;
  background-color: #ffc107 !important;
}
.alert:active {
/*     border: none !important; */
  color: white !important;
  background-color: #ffc107 !important;
}

.custom-radio {
  /* Hide the input element and target the next label that comes after it in the DOM */
  position: absolute;
  display: inline-block;
  opacity: 0;

  & + label {
    cursor: pointer;
    display: inline-block;
    position: relative;
    white-space: nowrap;
    line-height: 1rem;
    margin: 0 0 1.5rem 0;
    padding: 0 0 0 1rem;
    transition: all 0.5s ease-in-out;

    span {
      margin-left: 0.5rem;
    }

    /* Styles these pseudo elements to look like radio inputs. */
    &::before,
    &::after {
      content: '';
      position: absolute;
      color: #f5f5f5;
      text-align: center;
      border-radius: 0;
      top: 0;
      left: 0;
      width: 1rem;
      height: 1rem;
      transition: all 0.5s ease-in-out;
    }

    &::before {
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      line-height: 1rem;
      border-radius: 0;
      background-color: #ffffff;
      color: #ffffff;
      box-shadow: inset 0 0 0 1px #666565, inset 0 0 0 1rem #ffffff,
        inset 0 0 0 1rem #6b0707;
    }

    &:hover,
    &:focus,
    &:active {
      /* color: red; */
      font-weight: bolder;
      transition: all 0.3s ease;
      outline: none;

      &::before {
        /* color: #ffffff; */
        animation-duration: 0.5s;
        animation-name: changeSizeAnim;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        box-shadow: inset 0 0 0 1px #6b0707, inset 0 0 0 16px #ffffff,
          inset 0 0 0 16px #6b0707;
      }
    }
  }

  &:focus,
  &:hover,
  &:checked {
    & + label {
      /* color: #220000 !important; */
    }

    & + label::before {
      animation-duration: 0.3s;
      animation-name: selectCheckboxAnim;
      animation-iteration-count: 1;
      animation-direction: alternate;
      border: solid 1px #00ba0c;
      box-shadow: inset 0 0 0 1px #bc88d4, inset 0 0 0 0 #ffffff,
        inset 0 0 1px 2px #00ba0c;
    }
  }

  &:checked {
    & + label::before {
      content: 'âœ”'; /* Swap out this emoji checkmark with maybe an icon font of base svg*/
      background-color: #00ba0c;
/*       color: #ffffff; */
      border: solid 1px rgba(202, 50, 230, 0.5);
      box-shadow: inset 0 0 0 1px #bc88d4, inset 0 0 0 0 #ffffff,
        inset 0 0 0 16px #00ba0c;
    }
  }

  & + label {
    &::before {
      border-radius: 50%;
    }
  }

  &[type=checkbox] {
    & + label {
      &::before {
        /* Remove the border radius on the checkboxes for a square effect */
        border-radius: 0;
      }
    }
  }


  @keyframes changeSizeAnim {
    from {
      box-shadow: 0 0 0 0 #00ba0c,
        inset 0 0 0 1px #00ba0c,
        inset 0 0 0 16px #FFFFFF,
        inset 0 0 0 16px #00ba0c;
    }

    to {
      box-shadow: 0 0 0 1px #00ba0c,
        inset 0 0 0 1px #00ba0c,
        inset 0 0 0 16px #FFFFFF,
        inset 0 0 0 16px #00ba0c;
    }
  }

  /* Add some animations like a boss, cause why would you hustle to build
  a custom component when you can't touch this!
  */
  @keyframes selectCheckboxAnim {
    0% {
      box-shadow: 0 0 0 0 #bc88d4,
        inset 0 0 0 2px #FFFFFF,
        inset 0 0 0 3px #00ba0c,
        inset 0 0 0 16px #FFFFFF,
        inset 0 0 0 16px #00ba0c;
    }

    100% {
      box-shadow: 0 0 20px 8px #eeddee,
        inset 0 0 0 0 white,
        inset 0 0 0 1px #bc88d4,
        inset 0 0 0 0 #FFFFFF,
        inset 0 0 0 16px #00ba0c;
    }
  }
}

/* Styles used to test out and reproduce out your approach */
.container.control-experiment {
  background: #fee;


  span,
  input {
    display: flex;

    border: solid 1px red;
    width: 2rem;
    height: 2rem;
    line-height: 2rem;
    display: inline-block;
  }

  input {    
    position: absolute;
    margin: 0;
    padding: 0;
  }

  input[type='radio'] {
    // display: none; /* Uncommenting this out makes all your inputs unsable.*/
  }
}